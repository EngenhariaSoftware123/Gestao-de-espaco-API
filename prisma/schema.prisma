// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  email String @unique
  roles String[] 
  favorite_spaces Space[] @relation("FavoriteSpaces") 
  Maintenance Maintenance?
}

model Maintenance{
  id Int @id @default(autoincrement())
  likes Int @default(0)
  description String
  status String @default("ABERTO")
  spaceId Int @unique 
  Space Space @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  userId Int @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Space{
  id Int @id @default(autoincrement())
  name String
  typeRoom String?
  pavilion String
  acessibility String[]
  capacity Int
  Available_equipment Available_equipment[] 
  Maintenance Maintenance?
  users       User[]  @relation("FavoriteSpaces")
  
}

model Available_equipment{
  id Int @id @default(autoincrement())
  name String 
  quantity Int
  spaceId Int  
  space Space @relation(fields: [spaceId], references: [id], onDelete: Cascade)
}

